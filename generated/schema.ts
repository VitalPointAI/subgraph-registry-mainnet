// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class PutDID extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save PutDID entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save PutDID entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("PutDID", id.toString(), this);
    }
  }

  static load(id: string): PutDID | null {
    return changetype<PutDID | null>(store.get("PutDID", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get did(): string | null {
    let value = this.get("did");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set did(value: string | null) {
    if (!value) {
      this.unset("did");
    } else {
      this.set("did", Value.fromString(<string>value));
    }
  }

  get type(): string | null {
    let value = this.get("type");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set type(value: string | null) {
    if (!value) {
      this.unset("type");
    } else {
      this.set("type", Value.fromString(<string>value));
    }
  }

  get registered(): BigInt | null {
    let value = this.get("registered");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set registered(value: BigInt | null) {
    if (!value) {
      this.unset("registered");
    } else {
      this.set("registered", Value.fromBigInt(<BigInt>value));
    }
  }

  get owner(): string | null {
    let value = this.get("owner");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set owner(value: string | null) {
    if (!value) {
      this.unset("owner");
    } else {
      this.set("owner", Value.fromString(<string>value));
    }
  }
}

export class PutIdDID extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save PutIdDID entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save PutIdDID entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("PutIdDID", id.toString(), this);
    }
  }

  static load(id: string): PutIdDID | null {
    return changetype<PutIdDID | null>(store.get("PutIdDID", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get identifier(): string | null {
    let value = this.get("identifier");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set identifier(value: string | null) {
    if (!value) {
      this.unset("identifier");
    } else {
      this.set("identifier", Value.fromString(<string>value));
    }
  }

  get did(): string | null {
    let value = this.get("did");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set did(value: string | null) {
    if (!value) {
      this.unset("did");
    } else {
      this.set("did", Value.fromString(<string>value));
    }
  }

  get type(): string | null {
    let value = this.get("type");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set type(value: string | null) {
    if (!value) {
      this.unset("type");
    } else {
      this.set("type", Value.fromString(<string>value));
    }
  }

  get registered(): BigInt | null {
    let value = this.get("registered");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set registered(value: BigInt | null) {
    if (!value) {
      this.unset("registered");
    } else {
      this.set("registered", Value.fromBigInt(<BigInt>value));
    }
  }

  get owner(): string | null {
    let value = this.get("owner");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set owner(value: string | null) {
    if (!value) {
      this.unset("owner");
    } else {
      this.set("owner", Value.fromString(<string>value));
    }
  }
}

export class DeleteDID extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save DeleteDID entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save DeleteDID entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("DeleteDID", id.toString(), this);
    }
  }

  static load(id: string): DeleteDID | null {
    return changetype<DeleteDID | null>(store.get("DeleteDID", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get did(): string | null {
    let value = this.get("did");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set did(value: string | null) {
    if (!value) {
      this.unset("did");
    } else {
      this.set("did", Value.fromString(<string>value));
    }
  }

  get type(): string | null {
    let value = this.get("type");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set type(value: string | null) {
    if (!value) {
      this.unset("type");
    } else {
      this.set("type", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get deletedBy(): string | null {
    let value = this.get("deletedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set deletedBy(value: string | null) {
    if (!value) {
      this.unset("deletedBy");
    } else {
      this.set("deletedBy", Value.fromString(<string>value));
    }
  }
}

export class DeleteIdDID extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save DeleteIdDID entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save DeleteIdDID entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("DeleteIdDID", id.toString(), this);
    }
  }

  static load(id: string): DeleteIdDID | null {
    return changetype<DeleteIdDID | null>(store.get("DeleteIdDID", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get identifier(): string | null {
    let value = this.get("identifier");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set identifier(value: string | null) {
    if (!value) {
      this.unset("identifier");
    } else {
      this.set("identifier", Value.fromString(<string>value));
    }
  }

  get did(): string | null {
    let value = this.get("did");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set did(value: string | null) {
    if (!value) {
      this.unset("did");
    } else {
      this.set("did", Value.fromString(<string>value));
    }
  }

  get type(): string | null {
    let value = this.get("type");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set type(value: string | null) {
    if (!value) {
      this.unset("type");
    } else {
      this.set("type", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get deletedBy(): string | null {
    let value = this.get("deletedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set deletedBy(value: string | null) {
    if (!value) {
      this.unset("deletedBy");
    } else {
      this.set("deletedBy", Value.fromString(<string>value));
    }
  }
}

export class StoreAliase extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save StoreAliase entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save StoreAliase entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("StoreAliase", id.toString(), this);
    }
  }

  static load(id: string): StoreAliase | null {
    return changetype<StoreAliase | null>(store.get("StoreAliase", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get aliasOwner(): string | null {
    let value = this.get("aliasOwner");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set aliasOwner(value: string | null) {
    if (!value) {
      this.unset("aliasOwner");
    } else {
      this.set("aliasOwner", Value.fromString(<string>value));
    }
  }

  get alias(): string | null {
    let value = this.get("alias");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set alias(value: string | null) {
    if (!value) {
      this.unset("alias");
    } else {
      this.set("alias", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get storedBy(): string | null {
    let value = this.get("storedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set storedBy(value: string | null) {
    if (!value) {
      this.unset("storedBy");
    } else {
      this.set("storedBy", Value.fromString(<string>value));
    }
  }

  get definition(): string | null {
    let value = this.get("definition");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set definition(value: string | null) {
    if (!value) {
      this.unset("definition");
    } else {
      this.set("definition", Value.fromString(<string>value));
    }
  }

  get description(): string | null {
    let value = this.get("description");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set description(value: string | null) {
    if (!value) {
      this.unset("description");
    } else {
      this.set("description", Value.fromString(<string>value));
    }
  }
}

export class DeleteAliase extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save DeleteAliase entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save DeleteAliase entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("DeleteAliase", id.toString(), this);
    }
  }

  static load(id: string): DeleteAliase | null {
    return changetype<DeleteAliase | null>(store.get("DeleteAliase", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get aliasOwner(): string | null {
    let value = this.get("aliasOwner");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set aliasOwner(value: string | null) {
    if (!value) {
      this.unset("aliasOwner");
    } else {
      this.set("aliasOwner", Value.fromString(<string>value));
    }
  }

  get alias(): string | null {
    let value = this.get("alias");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set alias(value: string | null) {
    if (!value) {
      this.unset("alias");
    } else {
      this.set("alias", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get deletedBy(): string | null {
    let value = this.get("deletedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set deletedBy(value: string | null) {
    if (!value) {
      this.unset("deletedBy");
    } else {
      this.set("deletedBy", Value.fromString(<string>value));
    }
  }
}

export class Init extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Init entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save Init entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("Init", id.toString(), this);
    }
  }

  static load(id: string): Init | null {
    return changetype<Init | null>(store.get("Init", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get adminId(): string | null {
    let value = this.get("adminId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set adminId(value: string | null) {
    if (!value) {
      this.unset("adminId");
    } else {
      this.set("adminId", Value.fromString(<string>value));
    }
  }

  get adminSet(): BigInt | null {
    let value = this.get("adminSet");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set adminSet(value: BigInt | null) {
    if (!value) {
      this.unset("adminSet");
    } else {
      this.set("adminSet", Value.fromBigInt(<BigInt>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }
}

export class TransferAdmin extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save TransferAdmin entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save TransferAdmin entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("TransferAdmin", id.toString(), this);
    }
  }

  static load(id: string): TransferAdmin | null {
    return changetype<TransferAdmin | null>(store.get("TransferAdmin", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get transferredFrom(): string | null {
    let value = this.get("transferredFrom");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set transferredFrom(value: string | null) {
    if (!value) {
      this.unset("transferredFrom");
    } else {
      this.set("transferredFrom", Value.fromString(<string>value));
    }
  }

  get transferred(): BigInt | null {
    let value = this.get("transferred");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set transferred(value: BigInt | null) {
    if (!value) {
      this.unset("transferred");
    } else {
      this.set("transferred", Value.fromBigInt(<BigInt>value));
    }
  }

  get transferredTo(): string | null {
    let value = this.get("transferredTo");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set transferredTo(value: string | null) {
    if (!value) {
      this.unset("transferredTo");
    } else {
      this.set("transferredTo", Value.fromString(<string>value));
    }
  }
}

export class ChangeVerificationStatuse extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(
      id != null,
      "Cannot save ChangeVerificationStatuse entity without an ID"
    );
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save ChangeVerificationStatuse entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("ChangeVerificationStatuse", id.toString(), this);
    }
  }

  static load(id: string): ChangeVerificationStatuse | null {
    return changetype<ChangeVerificationStatuse | null>(
      store.get("ChangeVerificationStatuse", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get verified(): boolean {
    let value = this.get("verified");
    return value!.toBoolean();
  }

  set verified(value: boolean) {
    this.set("verified", Value.fromBoolean(value));
  }

  get changedBy(): string | null {
    let value = this.get("changedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set changedBy(value: string | null) {
    if (!value) {
      this.unset("changedBy");
    } else {
      this.set("changedBy", Value.fromString(<string>value));
    }
  }
}

export class ChangeIdVerificationStatuse extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(
      id != null,
      "Cannot save ChangeIdVerificationStatuse entity without an ID"
    );
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save ChangeIdVerificationStatuse entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("ChangeIdVerificationStatuse", id.toString(), this);
    }
  }

  static load(id: string): ChangeIdVerificationStatuse | null {
    return changetype<ChangeIdVerificationStatuse | null>(
      store.get("ChangeIdVerificationStatuse", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get identifier(): string | null {
    let value = this.get("identifier");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set identifier(value: string | null) {
    if (!value) {
      this.unset("identifier");
    } else {
      this.set("identifier", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get verified(): boolean {
    let value = this.get("verified");
    return value!.toBoolean();
  }

  set verified(value: boolean) {
    this.set("verified", Value.fromBoolean(value));
  }

  get changedBy(): string | null {
    let value = this.get("changedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set changedBy(value: string | null) {
    if (!value) {
      this.unset("changedBy");
    } else {
      this.set("changedBy", Value.fromString(<string>value));
    }
  }
}

export class RemoveRole extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save RemoveRole entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save RemoveRole entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("RemoveRole", id.toString(), this);
    }
  }

  static load(id: string): RemoveRole | null {
    return changetype<RemoveRole | null>(store.get("RemoveRole", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get contractId(): string | null {
    let value = this.get("contractId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set contractId(value: string | null) {
    if (!value) {
      this.unset("contractId");
    } else {
      this.set("contractId", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get role(): string | null {
    let value = this.get("role");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set role(value: string | null) {
    if (!value) {
      this.unset("role");
    } else {
      this.set("role", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get removedBy(): string | null {
    let value = this.get("removedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set removedBy(value: string | null) {
    if (!value) {
      this.unset("removedBy");
    } else {
      this.set("removedBy", Value.fromString(<string>value));
    }
  }
}

export class AddRole extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));

    this.set("role", Value.fromStringArray(new Array(0)));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save AddRole entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save AddRole entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("AddRole", id.toString(), this);
    }
  }

  static load(id: string): AddRole | null {
    return changetype<AddRole | null>(store.get("AddRole", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get contractId(): string | null {
    let value = this.get("contractId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set contractId(value: string | null) {
    if (!value) {
      this.unset("contractId");
    } else {
      this.set("contractId", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get role(): Array<string> {
    let value = this.get("role");
    return value!.toStringArray();
  }

  set role(value: Array<string>) {
    this.set("role", Value.fromStringArray(value));
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get addedBy(): string | null {
    let value = this.get("addedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set addedBy(value: string | null) {
    if (!value) {
      this.unset("addedBy");
    } else {
      this.set("addedBy", Value.fromString(<string>value));
    }
  }
}

export class AddVerifier extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save AddVerifier entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save AddVerifier entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("AddVerifier", id.toString(), this);
    }
  }

  static load(id: string): AddVerifier | null {
    return changetype<AddVerifier | null>(store.get("AddVerifier", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get whitelistedBy(): string | null {
    let value = this.get("whitelistedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set whitelistedBy(value: string | null) {
    if (!value) {
      this.unset("whitelistedBy");
    } else {
      this.set("whitelistedBy", Value.fromString(<string>value));
    }
  }
}

export class RemoveVerifier extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save RemoveVerifier entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save RemoveVerifier entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("RemoveVerifier", id.toString(), this);
    }
  }

  static load(id: string): RemoveVerifier | null {
    return changetype<RemoveVerifier | null>(store.get("RemoveVerifier", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get accountId(): string | null {
    let value = this.get("accountId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set accountId(value: string | null) {
    if (!value) {
      this.unset("accountId");
    } else {
      this.set("accountId", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get removedBy(): string | null {
    let value = this.get("removedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set removedBy(value: string | null) {
    if (!value) {
      this.unset("removedBy");
    } else {
      this.set("removedBy", Value.fromString(<string>value));
    }
  }
}

export class AddAdmin extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save AddAdmin entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save AddAdmin entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("AddAdmin", id.toString(), this);
    }
  }

  static load(id: string): AddAdmin | null {
    return changetype<AddAdmin | null>(store.get("AddAdmin", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get addedBy(): string | null {
    let value = this.get("addedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set addedBy(value: string | null) {
    if (!value) {
      this.unset("addedBy");
    } else {
      this.set("addedBy", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get adminAdded(): string | null {
    let value = this.get("adminAdded");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set adminAdded(value: string | null) {
    if (!value) {
      this.unset("adminAdded");
    } else {
      this.set("adminAdded", Value.fromString(<string>value));
    }
  }
}

export class RemoveAdmin extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save RemoveAdmin entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save RemoveAdmin entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("RemoveAdmin", id.toString(), this);
    }
  }

  static load(id: string): RemoveAdmin | null {
    return changetype<RemoveAdmin | null>(store.get("RemoveAdmin", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get removedBy(): string | null {
    let value = this.get("removedBy");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set removedBy(value: string | null) {
    if (!value) {
      this.unset("removedBy");
    } else {
      this.set("removedBy", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get adminRemoved(): string | null {
    let value = this.get("adminRemoved");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set adminRemoved(value: string | null) {
    if (!value) {
      this.unset("adminRemoved");
    } else {
      this.set("adminRemoved", Value.fromString(<string>value));
    }
  }
}

export class AddFundingKey extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save AddFundingKey entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save AddFundingKey entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("AddFundingKey", id.toString(), this);
    }
  }

  static load(id: string): AddFundingKey | null {
    return changetype<AddFundingKey | null>(store.get("AddFundingKey", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get fundingAccountPublicKey(): string | null {
    let value = this.get("fundingAccountPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set fundingAccountPublicKey(value: string | null) {
    if (!value) {
      this.unset("fundingAccountPublicKey");
    } else {
      this.set("fundingAccountPublicKey", Value.fromString(<string>value));
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }

  get keyAllowance(): string | null {
    let value = this.get("keyAllowance");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set keyAllowance(value: string | null) {
    if (!value) {
      this.unset("keyAllowance");
    } else {
      this.set("keyAllowance", Value.fromString(<string>value));
    }
  }
}

export class DeleteFundingKey extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save DeleteFundingKey entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save DeleteFundingKey entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("DeleteFundingKey", id.toString(), this);
    }
  }

  static load(id: string): DeleteFundingKey | null {
    return changetype<DeleteFundingKey | null>(
      store.get("DeleteFundingKey", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockTime(): BigInt | null {
    let value = this.get("blockTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTime(value: BigInt | null) {
    if (!value) {
      this.unset("blockTime");
    } else {
      this.set("blockTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHeight(): BigInt | null {
    let value = this.get("blockHeight");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockHeight(value: BigInt | null) {
    if (!value) {
      this.unset("blockHeight");
    } else {
      this.set("blockHeight", Value.fromBigInt(<BigInt>value));
    }
  }

  get blockHash(): string | null {
    let value = this.get("blockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set blockHash(value: string | null) {
    if (!value) {
      this.unset("blockHash");
    } else {
      this.set("blockHash", Value.fromString(<string>value));
    }
  }

  get predecessorId(): string | null {
    let value = this.get("predecessorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set predecessorId(value: string | null) {
    if (!value) {
      this.unset("predecessorId");
    } else {
      this.set("predecessorId", Value.fromString(<string>value));
    }
  }

  get receiverId(): string | null {
    let value = this.get("receiverId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set receiverId(value: string | null) {
    if (!value) {
      this.unset("receiverId");
    } else {
      this.set("receiverId", Value.fromString(<string>value));
    }
  }

  get signerId(): string | null {
    let value = this.get("signerId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerId(value: string | null) {
    if (!value) {
      this.unset("signerId");
    } else {
      this.set("signerId", Value.fromString(<string>value));
    }
  }

  get signerPublicKey(): string | null {
    let value = this.get("signerPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set signerPublicKey(value: string | null) {
    if (!value) {
      this.unset("signerPublicKey");
    } else {
      this.set("signerPublicKey", Value.fromString(<string>value));
    }
  }

  get gasBurned(): BigInt | null {
    let value = this.get("gasBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set gasBurned(value: BigInt | null) {
    if (!value) {
      this.unset("gasBurned");
    } else {
      this.set("gasBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get tokensBurned(): BigInt | null {
    let value = this.get("tokensBurned");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set tokensBurned(value: BigInt | null) {
    if (!value) {
      this.unset("tokensBurned");
    } else {
      this.set("tokensBurned", Value.fromBigInt(<BigInt>value));
    }
  }

  get outcomeId(): string | null {
    let value = this.get("outcomeId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeId(value: string | null) {
    if (!value) {
      this.unset("outcomeId");
    } else {
      this.set("outcomeId", Value.fromString(<string>value));
    }
  }

  get executorId(): string | null {
    let value = this.get("executorId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set executorId(value: string | null) {
    if (!value) {
      this.unset("executorId");
    } else {
      this.set("executorId", Value.fromString(<string>value));
    }
  }

  get outcomeBlockHash(): string | null {
    let value = this.get("outcomeBlockHash");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set outcomeBlockHash(value: string | null) {
    if (!value) {
      this.unset("outcomeBlockHash");
    } else {
      this.set("outcomeBlockHash", Value.fromString(<string>value));
    }
  }

  get log(): string | null {
    let value = this.get("log");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set log(value: string | null) {
    if (!value) {
      this.unset("log");
    } else {
      this.set("log", Value.fromString(<string>value));
    }
  }

  get standard(): string | null {
    let value = this.get("standard");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set standard(value: string | null) {
    if (!value) {
      this.unset("standard");
    } else {
      this.set("standard", Value.fromString(<string>value));
    }
  }

  get version(): string | null {
    let value = this.get("version");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set version(value: string | null) {
    if (!value) {
      this.unset("version");
    } else {
      this.set("version", Value.fromString(<string>value));
    }
  }

  get event(): string | null {
    let value = this.get("event");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set event(value: string | null) {
    if (!value) {
      this.unset("event");
    } else {
      this.set("event", Value.fromString(<string>value));
    }
  }

  get deletedFundingAccountPublicKey(): string | null {
    let value = this.get("deletedFundingAccountPublicKey");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set deletedFundingAccountPublicKey(value: string | null) {
    if (!value) {
      this.unset("deletedFundingAccountPublicKey");
    } else {
      this.set(
        "deletedFundingAccountPublicKey",
        Value.fromString(<string>value)
      );
    }
  }

  get time(): BigInt | null {
    let value = this.get("time");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set time(value: BigInt | null) {
    if (!value) {
      this.unset("time");
    } else {
      this.set("time", Value.fromBigInt(<BigInt>value));
    }
  }
}
